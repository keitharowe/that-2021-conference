@inherits Umbraco.Web.Mvc.UmbracoViewPage<Umbraco.Web.PublishedModels.FormPicker>
@using ClientDependency.Core.Mvc;

@{
    Html.RequiresJs("https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.1.1.min.js");
    Html.RequiresJs("https://ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.min.js");
    Html.RequiresJs("https://ajax.aspnetcdn.com/ajax/mvc/5.1/jquery.validate.unobtrusive.min.js");
     var margin = Model.Value<string>("margin");
    var padding = Model.Value<string>("padding");
    var customId = Model.Value<string>("customID");
    var customClass = Model.Value<string>("customClass");
}

<section id=" @customId" class="div-section @margin  @padding   @customClass  @(Model.HasValue("backgroundColor") ? $"background-{Model.Value<Umbraco.Core.PropertyEditors.ValueConverters.ColorPickerValueConverter.PickedColor>("backgroundColor").Label}" : string.Empty)">

    @if (Model.HasValue("headline"))
    {
        <h2 class="secondary-features__h2">@(Model.Value<string>("headline"))</h2>
    }
    @if (Model.HasValue("description"))
    {
        <p>@(Model.Value<string>("description"))</p>
    }
    @{
        var form = Model.Value("form");
        string formId = Model.Value<string>("form");

        if (!string.IsNullOrEmpty(formId))
        {
            Guid g = new Guid(formId);
            @Umbraco.RenderMacro("renderUmbracoForm", new { FormGuid = g, FormTheme = "default", ExcludeScripts = "0" });
        }
    }
</section>